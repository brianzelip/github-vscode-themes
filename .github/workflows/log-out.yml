# This is a basic workflow to help you get started with Actions

name: Log out

# Controls when the action will run.
on: [push, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_API_PAT }}

      - name: Get latest github-vscode-theme
        id: versions
        run: |
          echo ::set-output name=upstream::$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/primer/github-vscode-theme/releases/latest -u "brianzelip:${{ secrets.GH_API_PAT }}" | jq -r '.tag_name'))
          echo ::set-output name=local::$(cat package.json | jq -r '.config.latestUpstream')

      - name: Compare versions
        if: steps.versions.outputs.local == steps.versions.outputs.upstream
        run: echo "The versions are equal!"

      - name: Clone and checkout latest github-vscode-theme release
        if: steps.versions.outputs.local != steps.versions.outputs.upstream
        run: |
          latest_tag="$(curl \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/primer/github-vscode-theme/releases/latest \
            -u "brianzelip:${{ secrets.GH_API_PAT }}" | jq -r '.tag_name')"
          git clone https://github.com/primer/github-vscode-theme.git
          cd ./github-vscode-theme
          git checkout $latest_tag
          npm ci
          npm run build
          cp themes/*.json ../dist/
          cd ..
          rm -rf ./github-vscode-theme

      # Runs a set of commands using the runners shell

#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
